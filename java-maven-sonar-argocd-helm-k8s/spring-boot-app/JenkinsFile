pipeline {
  agent {
    docker {
      image 'maven:3.9.3-eclipse-temurin-17'
      args """
        --user root \
        -v /var/run/docker.sock:/var/run/docker.sock \
        -v /var/lib/jenkins/workspace:/var/lib/jenkins/workspace \
        --network host \
        --security-opt apparmor=unconfined
      """
    }
  }

  stages {

    stage('Checkout') {
      steps {
        checkout([$class: 'GitSCM',
          branches: [[name: '*/main']],
          userRemoteConfigs: [[
            url: 'https://github.com/vasanth-86/jenkins-java-sonarqube-k8s.git',
            credentialsId: 'github'
          ]]
        ])
      }
    }

    stage('Build and Test') {
      steps {
        sh '''
          cd java-maven-sonar-argocd-helm-k8s/spring-boot-app
          mvn clean package
        '''
      }
    }

    stage('Static Code Analysis') {
      environment {
        SONAR_URL = "http://34.47.142.116:9000"
      }
      steps {
        withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
          sh '''
            cd java-maven-sonar-argocd-helm-k8s/spring-boot-app
            mvn sonar:sonar \
              -Dsonar.projectKey=spring-boot-demo \
              -Dsonar.host.url=${SONAR_URL} \
              -Dsonar.login=${SONAR_AUTH_TOKEN}
          '''
        }
      }
    }

    stage('Install Docker CLI') {
      steps {
        sh '''
          apt-get update && apt-get install -y docker.io
          docker --version
        '''
      }
    }

    stage('Build and Push Docker Image') {
      environment {
        DOCKER_IMAGE = "vasanth8694/ultimate-cicd:${BUILD_NUMBER}"
      }
      steps {
        script {
          sh '''
            cd java-maven-sonar-argocd-helm-k8s/spring-boot-app
            docker build -t ${DOCKER_IMAGE} .
          '''
          docker.withRegistry('https://index.docker.io/v1/', 'docker') {
            sh 'docker push ${DOCKER_IMAGE}'
          }
        }
      }
    }

    stage('Update Deployment File in GitHub') {
  environment {
    GIT_REPO_NAME = "jenkins-java-sonarqube-k8s"
  }
  steps {
    withCredentials([usernamePassword(credentialsId: 'github', usernameVariable: 'GIT_USER', passwordVariable: 'GIT_TOKEN')]) {
      dir("${env.WORKSPACE}") {
        sh '''
          echo "Switching to main branch..."
          git checkout main || git checkout -b main
          
          echo "Updating deployment.yml with new image tag..."
          sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml

          git add java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
          git config user.email "vasantheeswaransakthivel@gmail.com"
          git config user.name "${GIT_USER}"
          git commit -m "Update deployment image to version ${BUILD_NUMBER}" || echo "No changes to commit"
          git push https://${GIT_USER}:${GIT_TOKEN}@github.com/${GIT_USER}/${GIT_REPO_NAME}.git HEAD:main
        '''
      }
    }
  }
}


  } // end of stages
} // end of pipeline
