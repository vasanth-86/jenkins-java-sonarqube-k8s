pipeline {
  agent {
    docker {
      image 'maven:3.9.3-eclipse-temurin-17'
      args '--user root -v /var/run/docker.sock:/var/run/docker.sock --network host --security-opt apparmor=unconfined'
    }
  }

  stages {

    stage('Checkout') {
      steps {
        checkout scm
        sh '''
          echo "‚úÖ Checkout completed"
          echo "Current directory: $(pwd)"
          ls -a
        '''
      }
    }

    stage('Build and Test') {
      steps {
        sh '''
          cd java-maven-sonar-argocd-helm-k8s/spring-boot-app
          mvn clean package -DskipTests
        '''
      }
    }

    stage('Static Code Analysis') {
      environment {
        SONAR_URL = "http://34.47.142.116:9000"
      }
      steps {
        withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
          sh '''
            cd java-maven-sonar-argocd-helm-k8s/spring-boot-app
            mvn sonar:sonar \
              -Dsonar.projectKey=spring-boot-demo \
              -Dsonar.host.url=${SONAR_URL} \
              -Dsonar.login=${SONAR_AUTH_TOKEN}
          '''
        }
      }
    }

    stage('Install Docker CLI') {
      steps {
        sh '''
          apt-get update && apt-get install -y docker.io git
          docker --version
          git --version
        '''
      }
    }

    stage('Build and Push Docker Image') {
      environment {
        DOCKER_IMAGE = "vasanth8694/ultimate-cicd:${BUILD_NUMBER}"
      }
      steps {
        script {
          sh '''
            cd java-maven-sonar-argocd-helm-k8s/spring-boot-app
            docker build -t ${DOCKER_IMAGE} .
            echo "‚úÖ Docker image built: ${DOCKER_IMAGE}"
          '''
          docker.withRegistry('https://index.docker.io/v1/', 'docker') {
            sh 'docker push ${DOCKER_IMAGE}'
          }
        }
      }
    }

    stage('Update Deployment File') {
      agent { label 'master' } // ‚úÖ run on Jenkins master safely
      environment {
        GIT_REPO_NAME = "jenkins-java-sonarqube-k8s"
        GIT_USER_NAME = "vasanth-86"
      }
      steps {
        withCredentials([string(credentialsId: 'github-1', variable: 'GITHUB_TOKEN')]) {
          sh '''
            echo "Current directory: $(pwd)"
            git config --global --add safe.directory $(pwd)
            git config user.email "vasantheeswaransakthivel.com"
            git config user.name "${GIT_USER_NAME}"

            echo "üîß Updating deployment manifest..."
            sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml

            git add java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
            git commit -m "Update deployment image to version ${BUILD_NUMBER}" || echo "No changes to commit"
            git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME}.git HEAD:main
          '''
        }
      }
    }
  }

  post {
    success {
      echo "‚úÖ Build succeeded!"
    }
    failure {
      echo "‚ùå Build failed!"
    }
  }
}
