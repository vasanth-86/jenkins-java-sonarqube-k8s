pipeline {
  agent {
    docker {
      image 'maven:3.9.3-eclipse-temurin-17'
      // Mount full workspace including .git
      args """
        --user root \
        -v /var/run/docker.sock:/var/run/docker.sock \
        -v ${WORKSPACE}:/workspace \
        -w /workspace \
        --network host \
        --security-opt apparmor=unconfined
      """
    }
  }

  environment {
    SONAR_HOST_URL = 'http://10.160.0.6:9000'
    SONAR_LOGIN = credentials('sonar-token')
  }

  stages {

    stage('Checkout') {
      steps {
        checkout scm
        sh '''
          echo "=== Checkout Stage ==="
          echo "Current Directory: $(pwd)"
          ls -a
          git status
        '''
      }
    }

    stage('Build and Test') {
      steps {
        sh '''
          echo "=== Build and Test Stage ==="
          cd java-maven-sonar-argocd-helm-k8s/spring-boot-app
          mvn clean package
        '''
      }
    }

    stage('Static Code Analysis') {
      steps {
        sh '''
          echo "=== Static Code Analysis Stage ==="
          cd java-maven-sonar-argocd-helm-k8s/spring-boot-app
          mvn sonar:sonar \
            -Dsonar.projectKey=spring-boot-app \
            -Dsonar.host.url=${SONAR_HOST_URL} \
            -Dsonar.login=${SONAR_LOGIN}
        '''
      }
    }

    stage('Install Docker CLI') {
      steps {
        sh '''
          echo "=== Install Docker CLI Stage ==="
          apt-get update -y
          apt-get install -y docker.io
          docker --version
        '''
      }
    }

    stage('Build and Push Docker Image') {
      steps {
        withCredentials([string(credentialsId: 'github-1', variable: 'GITHUB_TOKEN')]) {
          sh '''
            echo "=== Build and Push Docker Image Stage ==="
            cd java-maven-sonar-argocd-helm-k8s/spring-boot-app
            docker build -t vasanth8694/spring-boot-app:${BUILD_NUMBER} .
            docker login -u vasanth8694 -p ${GITHUB_TOKEN}
            docker push vasanth8694/spring-boot-app:${BUILD_NUMBER}
          '''
        }
      }
    }

    stage('Update Deployment File') {
      steps {
        withCredentials([string(credentialsId: 'github-1', variable: 'GITHUB_TOKEN')]) {
          sh '''
            echo "=== Update Deployment File Stage ==="
            echo "Current directory: $(pwd)"
            git config user.email "vasantheeswaransakthivel@gmail.com"
            git config user.name "vasanth-86"

            sed -i "s|image: .*|image: vasanth8694/spring-boot-app:${BUILD_NUMBER}|g" \
              java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml

            git add java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
            git commit -m "Update deployment image to version ${BUILD_NUMBER}" || echo "No changes to commit"
            git push https://${GITHUB_TOKEN}@github.com/vasanth-86/jenkins-java-sonarqube-k8s.git HEAD:main
          '''
        }
      }
    }
  }
}
