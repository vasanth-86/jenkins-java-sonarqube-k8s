pipeline {
  agent any

  environment {
    GIT_REPO_NAME = "jenkins-java-sonarqube-k8s"
    GIT_USER_NAME = "vasanth-86"
  }

  stages {
    stage('Checkout') {
      steps {
        git branch: 'main', url: 'https://github.com/vasanth-86/jenkins-java-sonarqube-k8s.git'
      }
    }

    stage('Build') {
      agent {
        docker {
          image 'maven:3.9.3-eclipse-temurin-17'
          args '--user root -v /var/run/docker.sock:/var/run/docker.sock'
        }
      }
      steps {
        sh '''
          echo "üß± Building the Maven project..."
          cd java-maven-sonar-argocd-helm-k8s/spring-boot-app
          mvn clean package -DskipTests
        '''
      }
    }

    stage('Docker Build & Push') {
      steps {
        withCredentials([string(credentialsId: 'github-1', variable: 'GITHUB_TOKEN')]) {
          sh '''
            echo "üê≥ Building Docker image..."
            cd java-maven-sonar-argocd-helm-k8s/spring-boot-app
            docker build -t vasanth8694/book-store-image:${BUILD_NUMBER} .
            echo "üîê Logging in to Docker Hub..."
            echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
            docker push vasanth8694/book-store-image:${BUILD_NUMBER}
          '''
        }
      }
    }

    stage('Update Deployment File') {
      agent any
      steps {
        withCredentials([string(credentialsId: 'github-1', variable: 'GITHUB_TOKEN')]) {
          sh '''
            echo "üìÇ Current directory: $(pwd)"
            git config --global --add safe.directory $(pwd)
            git config user.email "vasantheeswaransakthivel.com"
            git config user.name "${GIT_USER_NAME}"

            echo "üîß Updating deployment manifest..."
            sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml

            git add java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
            git commit -m "Update deployment image to version ${BUILD_NUMBER}" || echo "No changes to commit"
            git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME}.git HEAD:main
          '''
        }
      }
    }
  }

  post {
    success {
      echo "‚úÖ Build succeeded!"
    }
    failure {
      echo "‚ùå Build failed!"
    }
  }
}
